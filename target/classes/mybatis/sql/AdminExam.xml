<?xregml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
	 PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
	 "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.daou.pd.admin.exam.AdminExamMapper">

	<insert id="examReg" parameterType="examVO">
		insert into quiz_exam(exam_start_date, exam_end_date, exam_ox_num, exam_obj_num,
							  exam_short_num, exam_pass_score, exam_category)
		values(
			STR_TO_DATE(#{exam_start_date}, '%m/%d/%Y'),
			STR_TO_DATE(#{exam_end_date}, '%m/%d/%Y'),
			#{exam_ox_num},
			#{exam_obj_num},
			#{exam_short_num},
			#{exam_pass_score},
			#{exam_category} 
		)
	</insert>
	

	<select id="selectExamTarget" resultType="String">
		select emp_id
		from employee
		where emp_dept in
			<foreach collection="emp_dept" open="(" close=")" separator="," item="dept">
				#{dept}	
			</foreach> 
		and emp_grade in
			<foreach collection="emp_grade" open="(" close=")" separator="," item="grade">
				#{grade}	
			</foreach>
		and emp_type = 2
	</select>
	
	
	<insert id="userExamReg" parameterType="String">
		insert into quiz_user_exam(exam_degree, exam_take_id)
		values(
			(select max(exam_degree) from quiz_exam),
			#{emp_id}
		)
	</insert>


	<select id="examList" resultType="ExamVO">
		select exam_degree, exam_category, exam_start_date, exam_end_date,
			   exam_ox_num, exam_obj_num, exam_short_num, exam_pass_score
		from quiz_exam
	</select>
	

	
	<select id="recordList" parameterType="hashmap" resultType="hashmap">
		select q.exam_no, q.exam_degree, q.exam_take_id, q.exam_take_date, q.exam_retake_degree, q.exam_status,
			   q.exam_final_yn, q.exam_score, e.emp_name
		from quiz_user_exam q inner join employee e
		on q.exam_take_id = e.emp_id
		and e.use_yn = 'Y'
		
		<if test="degree_scType != null and degree_scType != '' and degree_scType != 'all'">
			and q.exam_degree = #{degree_scType}
		</if>
		
		<if test="status_scType != null and status_scType != '' and status_scType != 'all'">
			and q.exam_status = #{status_scType}
		</if>
		
		order by q.exam_degree desc, q.exam_take_id desc
	</select>

	
	<select id="statusCodeList" resultType="configVO">
		select quiz_cfg_code, quiz_cfg_code_name
		from quiz_config
		where quiz_cfg_code like 'status%'
	</select>
	
	
		
	<select id="getShortExamList" parameterType="examUserVO" resultType="hashmap">
		select i.item_title, i.item_contents, a.exam_no, a.item_no, a.exam_take_id, a.exam_degree, a.exam_detail_no, a.exam_detail_answer, a.exam_detail_correct, a.exam_retake_degree
		from quiz_item i left outer join
		                            ( select u.exam_no, e.item_no, u.exam_take_id, u.exam_degree, e.exam_detail_no, e.exam_detail_answer, e.exam_detail_correct, u.exam_retake_degree
		                              from quiz_user_exam u left outer join quiz_exam_detail e 
		                              on u.exam_no = e.exam_no ) a
		on i.item_no = a.item_no
		where i.item_type = '3' <!-- // item_type == 3 (주관식(short)) -->
		and a.exam_take_id = #{exam_take_id}
		and a.exam_degree = #{exam_degree}
		and a.exam_retake_degree = #{exam_retake_degree}
	</select>
	
	
	<update id="updtExamDetail" parameterType="examDetailVO">
		update quiz_exam_detail
		set correct_yn = #{correct_yn}, exam_detail_comment = #{exam_detail_comment}
		where exam_detail_no = #{exam_detail_no}
	</update>
	
	
	<select id="selectTotalCorrectYn" parameterType="examDetailVO" resultType="Integer">
		select count(*)
		from quiz_exam_detail
		where correct_yn = 'Y'
		and exam_no = #{exam_no}
	</select>
	
	
	<update id="updtExamScore" parameterType="ExamUserVO">
		update quiz_user_exam
		set  exam_score = #{exam_score}
		where exam_no = #{exam_no}
	</update>
	
	<select id="selectPassScore" parameterType="ExamUserVO" resultType="Integer">
		select exam_pass_score
		from quiz_exam
		where exam_degree = #{exam_degree}
	</select>
	
	<update id="finalExamUpdate" parameterType="ExamUserVO">
		update quiz_user_exam
		set  exam_status = #{exam_status}, exam_final_yn = #{exam_final_yn}
		where exam_no = #{exam_no}
	</update>
	
	
	<insert id="insertFailUser" parameterType="ExamUserVO">
		insert into quiz_user_exam(exam_degree, exam_take_id, exam_retake_degree)
		values(
			#{exam_degree},
			#{exam_take_id},
			#{exam_retake_degree}
		)
	</insert>
	
	<select id="examInfoList" resultType="examVO">
		select exam_degree, exam_pass_score
		from quiz_exam
	</select>
	
</mapper>	 